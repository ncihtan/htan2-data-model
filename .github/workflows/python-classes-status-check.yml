name: Python Classes Status Check

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'modules/*/domains/*.yaml'
      - 'modules/*/src/**/*.py'
      - 'config/config.yaml'
      - '.github/workflows/generate-python-classes.yml'
      - '.github/workflows/manual-python-generation.yml'

jobs:
  python-classes-status:
    runs-on: ubuntu-latest
    name: Python Classes Up-to-Date
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    
    - name: Install project
      run: poetry install --no-interaction
    
    - name: Generate Python Classes for Biospecimen
      run: |
        cd modules/Biospecimen
        poetry run gen-python domains/biospecimen.yaml > build/biospecimen.py
        mkdir -p src/htan_biospecimen/datamodel
        cp build/biospecimen.py src/htan_biospecimen/datamodel/
        touch src/htan_biospecimen/datamodel/schema_classes.py
    
    - name: Generate Python Classes for Clinical
      run: |
        cd modules/Clinical
        poetry run gen-project --config-file ../../config/config.yaml -d build domains/clinical.yaml
        mkdir -p src/htan_clinical/datamodel
        mv build/*.py src/htan_clinical/datamodel/
        touch src/htan_clinical/datamodel/schema_classes.py
    
    - name: Generate Python Classes for WES
      run: |
        cd modules/WES
        poetry run gen-python domains/level_1.yaml > build/wes.py
        mkdir -p src/htan_wes/datamodel
        cp build/wes.py src/htan_wes/datamodel/
        touch src/htan_wes/datamodel/schema_classes.py
    
    - name: Check if Python classes are up-to-date
      id: check-status
      run: |
        if git diff --quiet; then
          echo "‚úÖ Python classes are up-to-date with schemas"
          echo "status=up-to-date" >> $GITHUB_OUTPUT
        else
          echo "‚ùå Python classes are outdated"
          echo "status=outdated" >> $GITHUB_OUTPUT
          echo "üìã Outdated files:"
          git diff --name-only
        fi
    
    - name: Fail if outdated
      if: steps.check-status.outputs.status == 'outdated'
      run: |
        echo "‚ùå **REQUIRED CHECK FAILED: Python Classes Outdated**"
        echo ""
        echo "The Python classes in this PR are not up-to-date with the current schemas."
        echo "This is a required check that must pass before merging."
        echo ""
        echo "**Action Required:**"
        echo "1. Update Python classes to match schema changes"
        echo "2. Run: \`make gen-schema\` in each module directory"
        echo "3. Commit the updated Python classes"
        echo ""
        echo "**Outdated files:**"
        git diff --name-only
        exit 1
    
    - name: Success message
      if: steps.check-status.outputs.status == 'up-to-date'
      run: |
        echo "‚úÖ **Python Classes Status Check PASSED**"
        echo ""
        echo "All Python classes are up-to-date with the current schemas."
        echo "This PR is ready for review and merge."
