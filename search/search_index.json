{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"HTAN LinkML Documentation Welcome to the HTAN LinkML documentation. This documentation describes the data model for the Human Tumor Atlas Network (HTAN). Data Model Overview The HTAN Clinical Data Model is organized hierarchically: graph TD A[Clinical Data] --> B[Modules] B --> C[Demographics] B --> D[Diagnosis] B --> E[Exposure] B --> F[Family History] B --> G[Followup] B --> H[Molecular Test] B --> I[Therapy] B --> J[Vital Status] Documentation Structure This documentation is organized into the following sections: Modules : Detailed documentation for each module in the data model Quick Start : Get started with the HTAN LinkML data model Development : Information for developers working with the data model Getting Started To get started with the HTAN LinkML data model: Explore the Modules documentation Check out the Development guide for implementation details if you are contributing to the data model Contributing We welcome contributions to the HTAN LinkML data model. Please see the Development guide for information on how to contribute. Modules The HTAN LinkML model is organized into the following modules: Demographics Diagnosis Exposure Family History Followup Molecular Test Therapy Vital Status Resources HTAN Website LinkML Documentation GitHub Repository","title":"Home"},{"location":"#htan-linkml-documentation","text":"Welcome to the HTAN LinkML documentation. This documentation describes the data model for the Human Tumor Atlas Network (HTAN).","title":"HTAN LinkML Documentation"},{"location":"#data-model-overview","text":"The HTAN Clinical Data Model is organized hierarchically: graph TD A[Clinical Data] --> B[Modules] B --> C[Demographics] B --> D[Diagnosis] B --> E[Exposure] B --> F[Family History] B --> G[Followup] B --> H[Molecular Test] B --> I[Therapy] B --> J[Vital Status]","title":"Data Model Overview"},{"location":"#documentation-structure","text":"This documentation is organized into the following sections: Modules : Detailed documentation for each module in the data model Quick Start : Get started with the HTAN LinkML data model Development : Information for developers working with the data model","title":"Documentation Structure"},{"location":"#getting-started","text":"To get started with the HTAN LinkML data model: Explore the Modules documentation Check out the Development guide for implementation details if you are contributing to the data model","title":"Getting Started"},{"location":"#contributing","text":"We welcome contributions to the HTAN LinkML data model. Please see the Development guide for information on how to contribute.","title":"Contributing"},{"location":"#modules","text":"The HTAN LinkML model is organized into the following modules: Demographics Diagnosis Exposure Family History Followup Molecular Test Therapy Vital Status","title":"Modules"},{"location":"#resources","text":"HTAN Website LinkML Documentation GitHub Repository","title":"Resources"},{"location":"quickstart/","text":"Quick Start Guide Setup # Create and activate virtual environment python -m venv .venv source .venv/bin/activate # On Windows: .venv\\Scripts\\activate # Install dependencies pip install -e . Common Commands Testing # Run all tests make test # Run module tests make modules-test # Run specific module tests cd modules/Clinical && make test # Run individual test file python -m unittest modules/Clinical/tests/test_*.py -v Schema Generation # Generate schema classes for all modules make modules-gen # Generate schema classes for specific module cd modules/Clinical && make gen-schema Example Validation # Validate examples make test-examples CI Testing # Using act (GitHub Actions local runner) act -l # List workflows act pull_request # Run PR workflow # Manual CI testing python -m venv ci-venv source ci-venv/bin/activate pip install -e . make test Common Issues and Solutions Tests Failing Check Python version (CI uses 3.10) Verify dependencies: pip install -e . Check environment variables Schema Issues Regenerate schema: make modules-gen Check YAML syntax Verify required fields Import Errors Check PYTHONPATH Verify package installation Check module structure Project Structure htan2-data-model/ \u251c\u2500\u2500 modules/ # Module definitions \u251c\u2500\u2500 docs/ # Documentation \u251c\u2500\u2500 examples/ # Example data \u251c\u2500\u2500 src/ # Source code \u2514\u2500\u2500 Makefile # Build rules Getting Help Check docs/development.md for detailed guide Review GitHub issues Contact maintainers","title":"Quick Start"},{"location":"quickstart/#quick-start-guide","text":"","title":"Quick Start Guide"},{"location":"quickstart/#setup","text":"# Create and activate virtual environment python -m venv .venv source .venv/bin/activate # On Windows: .venv\\Scripts\\activate # Install dependencies pip install -e .","title":"Setup"},{"location":"quickstart/#common-commands","text":"","title":"Common Commands"},{"location":"quickstart/#testing","text":"# Run all tests make test # Run module tests make modules-test # Run specific module tests cd modules/Clinical && make test # Run individual test file python -m unittest modules/Clinical/tests/test_*.py -v","title":"Testing"},{"location":"quickstart/#schema-generation","text":"# Generate schema classes for all modules make modules-gen # Generate schema classes for specific module cd modules/Clinical && make gen-schema","title":"Schema Generation"},{"location":"quickstart/#example-validation","text":"# Validate examples make test-examples","title":"Example Validation"},{"location":"quickstart/#ci-testing","text":"# Using act (GitHub Actions local runner) act -l # List workflows act pull_request # Run PR workflow # Manual CI testing python -m venv ci-venv source ci-venv/bin/activate pip install -e . make test","title":"CI Testing"},{"location":"quickstart/#common-issues-and-solutions","text":"","title":"Common Issues and Solutions"},{"location":"quickstart/#tests-failing","text":"Check Python version (CI uses 3.10) Verify dependencies: pip install -e . Check environment variables","title":"Tests Failing"},{"location":"quickstart/#schema-issues","text":"Regenerate schema: make modules-gen Check YAML syntax Verify required fields","title":"Schema Issues"},{"location":"quickstart/#import-errors","text":"Check PYTHONPATH Verify package installation Check module structure","title":"Import Errors"},{"location":"quickstart/#project-structure","text":"htan2-data-model/ \u251c\u2500\u2500 modules/ # Module definitions \u251c\u2500\u2500 docs/ # Documentation \u251c\u2500\u2500 examples/ # Example data \u251c\u2500\u2500 src/ # Source code \u2514\u2500\u2500 Makefile # Build rules","title":"Project Structure"},{"location":"quickstart/#getting-help","text":"Check docs/development.md for detailed guide Review GitHub issues Contact maintainers","title":"Getting Help"}]}